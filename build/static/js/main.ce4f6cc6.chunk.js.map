{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/ClearCompletedBtn/index.js","components/ClearCompletedBtn/ClearCompletedBtn.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","ItemStatusFilter","buttons","name","label","_this$props","this","props","filter","onFilterChange","map","isActive","key","type","concat","onClick","Component","SearchPanel","state","term","onSearchChange","event","target","value","_this","setState","placeholder","onChange","TodoListItem","onDeleted","onToggleImportant","onToggleDone","important","classNames","TodoList","todos","elements","element","id","itemProps","Object","objectWithoutProperties","components_TodoListItem","assign","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","ClearCompletedBtn","clearCompletedItems","App","maxId","todoData","createTodoItem","deleteItem","index","findIndex","el","toConsumableArray","slice","text","length","_ref2","_ref3","toggleProperty","_ref4","_ref5","arr","propName","newItem","objectSpread","defineProperty","items","toLowerCase","includes","_this$state","visibleTodos","search","doneCount","todoCount","components_AppHeader","components_SearchPanel","components_ItemStatusFilter","components_TodoList","components_ItemAddForm","components_ClearCompletedBtn","ReactDOM","render","components_App","document","getElementById"],"mappings":"8YAEeA,SCCG,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,KACzB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,gBAAwBC,EAAxB,YCLSK,oNCEbC,QAAU,CACR,CAAEC,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,SAAUC,MAAO,SACzB,CAAED,KAAM,OAAQC,MAAO,QACvB,CAAED,KAAM,YAAaC,MAAO,sFAErB,IAAAC,EAC4BC,KAAKC,MAAhCC,EADDH,EACCG,OAAQC,EADTJ,EACSI,eAEVP,EAAUI,KAAKJ,QAAQQ,IAAI,SAAAhB,GAAqB,IAAlBS,EAAkBT,EAAlBS,KAAMC,EAAYV,EAAZU,MAClCO,EAAWH,IAAWL,EAC5B,OACEN,EAAAC,EAAAC,cAAA,UACEa,IAAKT,EACLU,KAAK,SACLb,UAAS,OAAAc,OAASH,EAAW,gBAAkB,oBAC/CI,QAAS,kBAAMN,EAAeN,KAE7BC,KAKP,OAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaE,UAxBOc,cCD/BC,oNCEbC,MAAQ,CACNC,KAAM,MAGRC,eAAiB,SAAAC,GACf,IAAMF,EAAOE,EAAMC,OAAOC,MAC1BC,EAAKC,SAAS,CAAEN,SAChBK,EAAKjB,MAAMa,eAAeD,4EAI1B,OACEtB,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLb,UAAU,4BACV0B,YAAY,iBACZH,MAAOjB,KAAKY,MAAMK,MAClBI,SAAUrB,KAAKc,wBAlBkBJ,sBCD1BY,SCCM,SAAAlC,GAOf,IANJU,EAMIV,EANJU,MACAyB,EAKInC,EALJmC,UACAC,EAIIpC,EAJJoC,kBACAC,EAGIrC,EAHJqC,aACAC,EAEItC,EAFJsC,UACApC,EACIF,EADJE,KAEIqC,EAAa,iBAIjB,OAHIrC,IAAMqC,GAAc,SACpBD,IAAWC,GAAc,cAG3BpC,EAAAC,EAAAC,cAAA,QAAMC,UAAWiC,GACfpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBe,QAASgB,GAC9ClC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+BACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAS,cAAAc,OAAgBlB,EAAO,GAAK,WAEzCQ,GAGHP,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLb,UAAU,oDACVe,QAASe,GAETjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,UACEc,KAAK,SACLb,UAAU,mDACVe,QAASc,GAEThC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBClCNkC,SCGE,SAAAxC,GAA2D,IAAxDyC,EAAwDzC,EAAxDyC,MAAON,EAAiDnC,EAAjDmC,UAAWC,EAAsCpC,EAAtCoC,kBAAmBC,EAAmBrC,EAAnBqC,aACjDK,EAAWD,EAAMzB,IAAI,SAAA2B,GAAW,IAC5BC,EAAqBD,EAArBC,GAAOC,EADqBC,OAAAC,EAAA,EAAAD,CACPH,EADO,QAEpC,OACExC,EAAAC,EAAAC,cAAA,MAAIa,IAAK0B,EAAItC,UAAU,mBACrBH,EAAAC,EAAAC,cAAC2C,EAADF,OAAAG,OAAA,GACMJ,EADN,CAEEV,UAAW,kBAAMA,EAAUS,IAC3BR,kBAAmB,kBAAMA,EAAkBQ,IAC3CP,aAAc,kBAAMA,EAAaO,UAKzC,OAAOzC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwBoC,KCjBhCQ,oNCGb1B,MAAQ,CACNd,MAAO,MAGTyC,cAAgB,SAAAxB,GACdG,EAAKC,SAAS,CACZrB,MAAOiB,EAAMC,OAAOC,WAIxBuB,SAAW,SAAAzB,GACTA,EAAM0B,iBACNvB,EAAKjB,MAAMyC,QAAQxB,EAAKN,MAAMd,OAC9BoB,EAAKC,SAAS,CACZrB,MAAO,8EAKT,OACEP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuB8C,SAAUxC,KAAKwC,UACpDjD,EAAAC,EAAAC,cAAA,SACEc,KAAK,OACLb,UAAU,4BACVuB,MAAOjB,KAAKY,MAAMd,MAClBuB,SAAUrB,KAAKuC,cACfnB,YAAY,0BAEd7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,oBA7BiCgB,cCF1BiC,SCCW,SAAAvD,GAA6B,IAA1BwD,EAA0BxD,EAA1BwD,oBAC3B,OACErD,EAAAC,EAAAC,cAAA,UACEC,UAAU,mCACVe,QAAS,kBAAMmC,MAFjB,qBCHWC,oNCUbC,MAAQ,MACRlC,MAAQ,CACNmC,SAAU,CACR7B,EAAK8B,eAAe,eACpB9B,EAAK8B,eAAe,eACpB9B,EAAK8B,eAAe,gBAEtBnC,KAAM,GACNX,OAAQ,SAYV+C,WAAa,SAAAjB,GACXd,EAAKC,SAAS,SAAA/B,GAAkB,IAAf2D,EAAe3D,EAAf2D,SACTG,EAAQH,EAASI,UAAU,SAAAC,GAAE,OAAIA,EAAGpB,KAAOA,IAKjD,MAAO,CACLe,SALU,GAAAvC,OAAA0B,OAAAmB,EAAA,EAAAnB,CACPa,EAASO,MAAM,EAAGJ,IADXhB,OAAAmB,EAAA,EAAAnB,CAEPa,EAASO,MAAMJ,EAAQ,WAQhCR,QAAU,SAAAa,GACY,IAAhBA,EAAKC,QACTtC,EAAKC,SAAS,SAAAsC,GAAkB,IAAfV,EAAeU,EAAfV,SAGf,MAAO,CACLA,SAHU,GAAAvC,OAAA0B,OAAAmB,EAAA,EAAAnB,CAAOa,GAAP,CAAiB7B,EAAK8B,eAAeO,WAerD/B,kBAAoB,SAAAQ,GAClBd,EAAKC,SAAS,SAAAuC,GAAkB,IAAfX,EAAeW,EAAfX,SACf,MAAO,CACLA,SAAU7B,EAAKyC,eAAeZ,EAAUf,EAAI,mBAKlDP,aAAe,SAAAO,GACbd,EAAKC,SAAS,SAAAyC,GAAkB,IAAfb,EAAea,EAAfb,SACf,MAAO,CACLA,SAAU7B,EAAKyC,eAAeZ,EAAUf,EAAI,cAKlDlB,eAAiB,SAAAD,GACfK,EAAKC,SAAS,CACZN,YAIJV,eAAiB,SAAAD,GACfgB,EAAKC,SAAS,CACZjB,cA4BJ0C,oBAAsB,WACpB1B,EAAKC,SAAS,SAAA0C,GAAkB,IAAfd,EAAec,EAAfd,SAGf,MAAO,CACLA,SAHUb,OAAAmB,EAAA,EAAAnB,CAAOa,GAGA7C,OAAO,SAAAkD,GAAE,OAAKA,EAAG9D,yFAjGzBQ,GACb,MAAO,CACLA,QACA4B,WAAW,EACXpC,MAAM,EACN0C,GAAIhC,KAAK8C,gDA4BEgB,EAAK9B,EAAI+B,GACtB,IAAMb,EAAQY,EAAIX,UAAU,SAAAC,GAAE,OAAIA,EAAGpB,KAAOA,IACtCgC,EAAO9B,OAAA+B,EAAA,EAAA/B,CAAA,GAAQ4B,EAAIZ,GAAZhB,OAAAgC,EAAA,EAAAhC,CAAA,GAAqB6B,GAAYD,EAAIZ,GAAOa,KAEzD,SAAAvD,OAAA0B,OAAAmB,EAAA,EAAAnB,CAAW4B,EAAIR,MAAM,EAAGJ,IAAxB,CAAgCc,GAAhC9B,OAAAmB,EAAA,EAAAnB,CAA4C4B,EAAIR,MAAMJ,EAAQ,oCA+BzDiB,EAAOtD,GACZ,OAAoB,IAAhBA,EAAK2C,OACAW,EAEFA,EAAMjE,OAAO,SAAAkD,GAAE,OACpBA,EAAGtD,MAAMsE,cAAcC,SAASxD,EAAKuD,gDAIlCD,EAAOjE,GACZ,OAAQA,GACN,IAAK,MACH,OAAOiE,EACT,IAAK,SACH,OAAOA,EAAMjE,OAAO,SAAAkD,GAAE,OAAKA,EAAG9D,OAChC,IAAK,OACH,OAAO6E,EAAMjE,OAAO,SAAAkD,GAAE,OAAIA,EAAG9D,OAC/B,IAAK,YACH,OAAO6E,EAAMjE,OAAO,SAAAkD,GAAE,OAAIA,EAAG1B,YAC/B,QACE,OAAOyC,oCAaJ,IAAAG,EAC4BtE,KAAKY,MAAhCmC,EADDuB,EACCvB,SAAUlC,EADXyD,EACWzD,KAAMX,EADjBoE,EACiBpE,OAClBqE,EAAevE,KAAKE,OAAOF,KAAKwE,OAAOzB,EAAUlC,GAAOX,GACxDuE,EAAY1B,EAAS7C,OAAO,SAAAkD,GAAE,OAAIA,EAAG9D,OAAMkE,OAC3CkB,EAAY3B,EAASS,OAASiB,EAEpC,OACElF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACkF,EAAD,CAAWtF,KAAMqF,EAAWpF,KAAMmF,IAClClF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACmF,EAAD,CACE3D,MAAOjB,KAAKY,MAAM4D,OAClB1D,eAAgBd,KAAKc,iBAEvBvB,EAAAC,EAAAC,cAACoF,EAAD,CACE3E,OAAQA,EACRC,eAAgBH,KAAKG,kBAGzBZ,EAAAC,EAAAC,cAACqF,EAAD,CACEjD,MAAO0C,EACPhD,UAAWvB,KAAKiD,WAChBP,QAAS1C,KAAK0C,QACdlB,kBAAmBxB,KAAKwB,kBACxBC,aAAczB,KAAKyB,eAErBlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACsF,EAAD,CAAarC,QAAS1C,KAAK0C,UAC3BnD,EAAAC,EAAAC,cAACuF,EAAD,CAAmBpC,oBAAqB5C,KAAK4C,+BA7ItBlC,oBCJjCuE,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ce4f6cc6.chunk.js","sourcesContent":["import AppHeader from './AppHeader';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './AppHeader.css'\r\n\r\nconst AppHeader = ({ toDo, done}) => {\r\n  return (\r\n    <div className='app-header d-flex'>\r\n      <h1>todos</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import ItemStatusFilter from './ItemStatusFilter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from \"react\";\r\nimport \"./ItemStatusFilter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n  buttons = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"To do\" },\r\n    { name: \"done\", label: \"Done\" },\r\n    { name: \"important\", label: \"Important\" },\r\n  ];\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      return (\r\n        <button\r\n          key={name}\r\n          type=\"button\"\r\n          className={`btn ${isActive ? \"btn-secondary\" : \"btn-outline-dark\"}`}\r\n          onClick={() => onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return <div className=\"btn-group\">{buttons}</div>;\r\n  }\r\n}\r\n","import SearchPanel from './SearchPanel';\r\n\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\nimport \"./SearchPanel.css\";\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: \"\"\r\n  };\r\n\r\n  onSearchChange = event => {\r\n    const term = event.target.value;\r\n    this.setState({ term });\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        value={this.state.value}\r\n        onChange={this.onSearchChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import TodoListItem from './TodoListItem';\r\n\r\nexport default TodoListItem;","import React from \"react\";\r\nimport \"./TodoListItem.css\";\r\n\r\nconst TodoListItem = ({\r\n  label,\r\n  onDeleted,\r\n  onToggleImportant,\r\n  onToggleDone,\r\n  important,\r\n  done\r\n}) => {\r\n  let classNames = \"todo-list-item\";\r\n  if (done) classNames += \" done\";\r\n  if (important) classNames += \" important\";\r\n\r\n  return (\r\n    <span className={classNames}>\r\n      <span className=\"todo-list-item-label\" onClick={onToggleDone}>\r\n        <span className=\"btn btn-light btn-sm circle\">\r\n          <i className={`fa fa-check${done ? \"\" : \"none\"}`} />\r\n        </span>\r\n        {label}\r\n      </span>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-success btn-sm float-right circle\"\r\n        onClick={onToggleImportant}\r\n      >\r\n        <i className=\"fa fa-exclamation\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-danger btn-sm float-right circle\"\r\n        onClick={onDeleted}\r\n      >\r\n        <i className=\"fa fa-trash-o\" />\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\nexport default TodoListItem;\r\n","import TodoList from './TodoList';\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport TodoListItem from \"../TodoListItem\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  const elements = todos.map(element => {\r\n    const { id, ...itemProps } = element;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem \r\n          {...itemProps} \r\n          onDeleted={() => onDeleted(id)} \r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemAddForm from './ItemAddForm';\r\n\r\nexport default ItemAddForm;","import React, { Component } from \"react\";\r\n\r\nimport \"./ItemAddForm.css\";\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: \"\"\r\n  };\r\n\r\n  onLabelChange = event => {\r\n    this.setState({\r\n      label: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.addItem(this.state.label);\r\n    this.setState({\r\n      label: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control search-input\"\r\n          value={this.state.label}\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"what needs to be done\"\r\n        />\r\n        <button className=\"btn btn-success\">Add Item</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import ClearCompletedBtn from './ClearCompletedBtn';\r\n\r\nexport default ClearCompletedBtn;","import React from \"react\";\r\nimport \"./ClearCompletedBtn.css\";\r\n\r\nconst ClearCompletedBtn = ({ clearCompletedItems }) => {\r\n  return (\r\n    <button\r\n      className=\"btn btn-outline-danger clear-btn\"\r\n      onClick={() => clearCompletedItems()}\r\n    >\r\n      Clear Completed\r\n    </button>\r\n  );\r\n};\r\nexport default ClearCompletedBtn;\r\n","import App from './App';\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport TodoList from \"../TodoList\";\r\nimport ItemAddForm from \"../ItemAddForm\";\r\nimport ClearCompletedBtn from \"../ClearCompletedBtn\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink coffe\"),\r\n      this.createTodoItem(\"Learn React\"),\r\n      this.createTodoItem(\"Learn Redux\")\r\n    ],\r\n    term: \"\",\r\n    filter: \"all\"\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const index = todoData.findIndex(el => el.id === id);\r\n      const newArr = [\r\n        ...todoData.slice(0, index),\r\n        ...todoData.slice(index + 1)\r\n      ];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = text => {\r\n    if (text.length === 0) return;\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [...todoData, this.createTodoItem(text)];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const index = arr.findIndex(el => el.id === id);\r\n    const newItem = { ...arr[index], [propName]: !arr[index][propName] };\r\n\r\n    return [...arr.slice(0, index), newItem, ...arr.slice(index + 1)];\r\n  }\r\n\r\n  onToggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\")\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\")\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = term => {\r\n    this.setState({\r\n      term\r\n    });\r\n  };\r\n\r\n  onFilterChange = filter => {\r\n    this.setState({\r\n      filter\r\n    });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter(el =>\r\n      el.label.toLowerCase().includes(term.toLowerCase())\r\n    );\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case \"all\":\r\n        return items;\r\n      case \"active\":\r\n        return items.filter(el => !el.done);\r\n      case \"done\":\r\n        return items.filter(el => el.done);\r\n      case \"important\":\r\n        return items.filter(el => el.important);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  clearCompletedItems = () => {\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [...todoData];\r\n\r\n      return {\r\n        todoData: newArr.filter(el => !el.done)\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n    const visibleTodos = this.filter(this.search(todoData, term), filter);\r\n    const doneCount = todoData.filter(el => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel\r\n            value={this.state.search}\r\n            onSearchChange={this.onSearchChange}\r\n          />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n        <TodoList\r\n          todos={visibleTodos}\r\n          onDeleted={this.deleteItem}\r\n          addItem={this.addItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n        <div className=\"bottom-panel d-flex\">\r\n          <ItemAddForm addItem={this.addItem} />\r\n          <ClearCompletedBtn clearCompletedItems={this.clearCompletedItems} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}